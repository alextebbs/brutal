// Text sizing and baseline

// Classic
$font-size: 16px;
$baseline: 24px;

// Example using rem units
// $font-size: 1rem;
// $baseline: 1.618rem; // we golden boys

// Example of setting the font to vw
// $font-size: 1vw;
// $baseline: 1.618vw; // we golden boys

$system-font-stack: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";

$system-font-stack: system-ui, sans-serif;

// Microsoft font stack
// $base-font-stack: "Segoe UI", sans-serif;
// $alt-font-stack: $base-font-stack;

// Example using system font stack
$base-font-stack: $system-font-stack;
$alt-font-stack: $base-font-stack;

// Example using alternate font stack
// $base-font-stack: 'Helvetica Neue', sans-serif;
// $alt-font-stack: 'Palatino', serif;

$monospace-font-stack: "Inconsolata", monospace;

// Shorthands and a helper function
$bl: $baseline;
$lh: $baseline;
$fs: $font-size;

@function bl($ratio) {
  @return calc(#{$bl} * (#{$ratio}));
}

@function bl($ratio) {
  @return $bl * $ratio;
}

$modularscale: (
  base: $font-size,
  ratio: $major-third,

  medium: (
    base: $font-size,
    ratio: $minor-third,
  ),

  small: (
    base: $font-size,
    ratio: $major-second,
  )
);

@function m($v: 0, $base: false, $ratio: false, $thread: false, $settings: $modularscale) {
  @return ms-function($v, $base, $ratio, $thread, $settings);
}

// Manual Type scale from 0-9
// $type-scale: (
//   0: (14px, 20px),
//   1: (16px, 24px),
//   2: (22px, 28px),
//   3: (28px, 36px),
//   4: (36px, 48px),
//   5: (48px, 62px),
//   6: (62px, 72px),
//   7: (72px, 84px),
//   8: (84px, 112px),
//   9: (112px, 120px)
// );

// Using modularscale
$type-scale: (
  0:  (m(-1),  1.5em),
  1:  (m(0),   1.5em),
  2:  (m(1),   1.5em),
  3:  (m(2),   1.45em),
  4:  (m(3),   1.4em),
  5:  (m(4),   1.35em),
  6:  (m(5),   1.3em),
  7:  (m(6),   1.2em),
  8:  (m(7),   1.1em),
  9:  (m(8),   1.05em)
);

$type-scale-medium: (
  0:  (m(-1,  $thread:medium),  1.5em),
  1:  (m(0,   $thread:medium),  1.5em),
  2:  (m(1,   $thread:medium),  1.5em),
  3:  (m(2,   $thread:medium),  1.45em),
  4:  (m(3,   $thread:medium),  1.4em),
  5:  (m(4,   $thread:medium),  1.35em),
  6:  (m(5,   $thread:medium),  1.3em),
  7:  (m(6,   $thread:medium),  1.2em),
  8:  (m(7,   $thread:medium),  1.1em),
  9:  (m(8,   $thread:medium),  1.05em)
);

$type-scale-small: (
  0:  (m(-1,  $thread:small),  1.5em),
  1:  (m(0,   $thread:small),  1.5em),
  2:  (m(1,   $thread:small),  1.5em),
  3:  (m(2,   $thread:small),  1.45em),
  4:  (m(3,   $thread:small),  1.4em),
  5:  (m(4,   $thread:small),  1.35em),
  6:  (m(5,   $thread:small),  1.3em),
  7:  (m(6,   $thread:small),  1.2em),
  8:  (m(7,   $thread:small),  1.1em),
  9:  (m(8,   $thread:small),  1.05em)
);

@mixin type-scale($i) {
  font-size: nth(map-get($type-scale, $i), 1);
  line-height: nth(map-get($type-scale, $i), 2);

  @include below(v('medium')) {
    font-size: nth(map-get($type-scale-medium, $i), 1);
    line-height: nth(map-get($type-scale-medium, $i), 2);
  }

  @include below(v('small')) {
    font-size: nth(map-get($type-scale-small, $i), 1);
    line-height: nth(map-get($type-scale-small, $i), 2);
  }
}

@for $i from 0 through 9 {
  %type-scale-#{$i} {
    @include type-scale($i);
  }
}

// Define heading styles
%heading-1 {
  @extend %type-scale-6;
}

%heading-2 {
  @extend %type-scale-5;
}

%heading-3 {
  @extend %type-scale-4;
}

%heading-4 {
  @extend %type-scale-3;
}

%heading-5 {
  @extend %type-scale-2;
}

%heading-6 {
  @extend %type-scale-1;
}

%global-heading {
  font-family: $alt-font-stack;
  font-weight: 600;

  &:not(:last-child) {
    margin-bottom: $bl;
  }
}

%heading-1, %heading-2, %heading-3, %heading-4, %heading-5, %heading-6 {
  @extend %global-heading;
}

